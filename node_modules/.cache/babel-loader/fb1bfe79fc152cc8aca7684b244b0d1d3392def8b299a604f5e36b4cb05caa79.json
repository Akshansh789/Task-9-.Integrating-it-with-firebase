{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Downloads\\\\expenes-tracker-app\\\\src\\\\Components\\\\Pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { expContext } from '../Store/ExpenseContext';\nimport './Login.Module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  let enteredpass = useRef();\n  let enteredEmail = useRef();\n  let enteredConfirmPass = useRef();\n  let ctx = useContext(expContext);\n  const history = useHistory();\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (!ctx.login) {\n      if (enteredEmail.current.value.length > 0 && enteredpass.current.value.length > 0 && enteredConfirmPass.current.value.length > 0) {\n        if (enteredpass.current.value === enteredConfirmPass.current.value) {\n          let responce = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB0otDOfaFjWxMIU5I63kasL3cmb9j00VU', {\n            method: 'POST',\n            body: JSON.stringify({\n              email: enteredEmail.current.value,\n              password: enteredpass.current.value,\n              returnSecureToken: true\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (responce.ok) {\n            let data = await responce.json();\n            console.log(\"Authantication Token:\", ctx.token);\n            ctx.setToken(data.idToken);\n            alert(\"User has signed Up\");\n            console.log(\"User has signed Up\");\n          } else {\n            let errorMessage = 'Authentication failed!';\n            alert(errorMessage);\n          }\n        } else {\n          alert(\"Password and confirm passwords are not matching\");\n        }\n      } else {\n        alert(\"please fill all the data\");\n      }\n    } else {\n      if (enteredEmail.current.value.length > 0 && enteredpass.current.value.length > 0) {\n        let responce = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB0otDOfaFjWxMIU5I63kasL3cmb9j00VU', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail.current.value,\n            password: enteredpass.current.value,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (responce.ok) {\n          let data = await responce.json();\n          console.log(\"Authantication Token:\", data.idToken);\n          ctx.setToken(data.idToken);\n          console.log(ctx);\n          alert(\"Logged In Successfully\");\n          console.log(\"Logged In Successfully\");\n          history.push('/profile');\n        } else {\n          let errorMessage = 'Authentication failed!';\n          alert(errorMessage);\n        }\n      } else {\n        alert(\"please fill all the data\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !ctx.token && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-3\",\n        children: !ctx.login ? \"Sign Up\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            ref: enteredEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            placeholder: \"Password\",\n            ref: enteredpass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), !ctx.login && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            placeholder: \"Confirm Password\",\n            ref: enteredConfirmPass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary border w-100\",\n            onClick: submitHandler,\n            children: !ctx.login ? \"Sign Up\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            ctx.setLogin(!ctx.login);\n          },\n          type: \"button\",\n          className: \"btn btn-outline-success my-3 w-100\",\n          children: !ctx.login ? \"Have an account?Login\" : \"Don't have an account?Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"2W07JPAWkV6v1JX/47vWQL5ZE8A=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useRef","useHistory","expContext","jsxDEV","_jsxDEV","Login","_s","enteredpass","enteredEmail","enteredConfirmPass","ctx","history","submitHandler","e","preventDefault","login","current","value","length","responce","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","ok","data","json","console","log","token","setToken","idToken","alert","errorMessage","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","ref","required","onClick","setLogin","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Downloads/expenes-tracker-app/src/Components/Pages/Login.js"],"sourcesContent":["import React, { useContext, useRef } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { expContext } from '../Store/ExpenseContext';\nimport './Login.Module.css'\n\nconst Login = () => {\n    let enteredpass = useRef();\n    let enteredEmail = useRef();\n    let enteredConfirmPass = useRef();\n\n    let ctx=useContext(expContext);\n    const history=useHistory();\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        if (!ctx.login) {\n            if (enteredEmail.current.value.length > 0 && enteredpass.current.value.length > 0 && enteredConfirmPass.current.value.length > 0) {\n                if (enteredpass.current.value === enteredConfirmPass.current.value) {\n                    let responce = await fetch(\n                        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB0otDOfaFjWxMIU5I63kasL3cmb9j00VU',\n                        {\n                            method: 'POST',\n                            body: JSON.stringify({\n                                email: enteredEmail.current.value,\n                                password: enteredpass.current.value,\n                                returnSecureToken: true,\n                            }),\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                        }\n                    )\n\n                    if (responce.ok) {\n                        let data = await responce.json();\n                        console.log(\"Authantication Token:\",ctx.token);\n                        ctx.setToken(data.idToken);\n                        alert(\"User has signed Up\")\n                        console.log(\"User has signed Up\");\n                    } else {\n                        let errorMessage = 'Authentication failed!';\n                        alert(errorMessage);\n                    }\n                }\n                else {\n                    alert(\"Password and confirm passwords are not matching\")\n                }\n            } else {\n                alert(\"please fill all the data\")\n            }\n        } else {\n            if (enteredEmail.current.value.length > 0 && enteredpass.current.value.length > 0) {\n                let responce = await fetch(\n                    'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB0otDOfaFjWxMIU5I63kasL3cmb9j00VU',\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            email: enteredEmail.current.value,\n                            password: enteredpass.current.value,\n                            returnSecureToken: true,\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    }\n                )\n\n                if (responce.ok) {\n                    let data = await responce.json();\n                    console.log(\"Authantication Token:\", data.idToken);\n                    ctx.setToken(data.idToken);\n                    console.log(ctx)\n                    alert(\"Logged In Successfully\")\n                    console.log(\"Logged In Successfully\");\n                    history.push('/profile')\n                } else {\n                    let errorMessage = 'Authentication failed!';\n                    alert(errorMessage);\n                }\n            }\n            else {\n                alert(\"please fill all the data\")\n            }\n        }\n\n\n    }\n\n    return (\n        <div>\n            {!ctx.token && <section className=\"auth\">\n                <h2 className='my-3'>{!ctx.login ? \"Sign Up\" : \"Log In\"}</h2>\n                <form >\n                    <div className=\"control\">\n                        <input type='email' id='email' placeholder='Email' ref={enteredEmail} />\n                    </div>\n                    <div className=\"control\">\n                        <input\n                            type='password'\n                            id='password'\n                            required\n                            placeholder='Password'\n                            ref={enteredpass}\n                        />\n                    </div>\n                    {!ctx.login && <div className=\"control\">\n                        <input\n                            type='password'\n                            id='password'\n                            required\n                            placeholder='Confirm Password'\n                            ref={enteredConfirmPass}\n                        />\n                    </div>}\n                    <div >\n                        <button className=\"btn btn-primary border w-100\" onClick={submitHandler}>{!ctx.login ? \"Sign Up\" : \"Login\"}</button>\n                    </div>\n                </form>\n                <div>\n                    <button\n                        onClick={() => { ctx.setLogin(!ctx.login) }}\n                        type=\"button\"\n                        className=\"btn btn-outline-success my-3 w-100\">\n                        {!ctx.login ? \"Have an account?Login\" : \"Don't have an account?Sign up\"}\n                    </button>\n                </div>\n            </section> }\n        </div>\n    )\n}\n\nexport default Login\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}